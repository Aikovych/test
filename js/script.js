document.addEventListener("DOMContentLoaded", function () {
    const audio = document.getElementById("menu-music");
    const soundButton = document.querySelector(".sound-button");
    const achievementsButton = document.querySelector(".achievements-button");
    const translationButton = document.querySelector(".translation-button");
    const leftButton = document.querySelector(".left-button");
    const infoButton = document.getElementById("info-btn");
    const extraInfoButton = document.getElementById("extra-info-btn");
    const infoModal = document.getElementById("info-modal");
    const extraInfoModal = document.getElementById("extra-info-modal");
    const closeInfo = document.getElementById("close-info");
    const closeExtraInfo = document.getElementById("close-extra-info");
    const soundIcon = soundButton.querySelector("i");

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–≤—É–∫–∞ –∏–∑ localStorage
    let isMuted = localStorage.getItem("isMuted") === "true";

    // ‚úÖ –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –∑–≤—É–∫–∞
    function updateSoundButton() {
        if (isMuted) {
            soundIcon.classList.replace("fa-volume-up", "fa-volume-mute");
            soundButton.classList.add("sound-off");
        } else {
            soundIcon.classList.replace("fa-volume-mute", "fa-volume-up");
            soundButton.classList.remove("sound-off");
        }
    }

    // ‚úÖ –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∑–≤—É–∫–∞
    function toggleSound() {
        isMuted = !isMuted;
        audio.muted = isMuted;
        localStorage.setItem("isMuted", isMuted);
        updateSoundButton();
    }

    // ‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫
    function animateButton(button) {
        button.classList.add("button-clicked");
        setTimeout(() => {
            button.classList.remove("button-clicked");
        }, 200);
    }

    // ‚úÖ –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏
    function toggleButton(button) {
        button.classList.toggle("active");
    }

    // üéµ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–≤—É–∫–∞
    soundButton.addEventListener("click", function () {
        toggleSound();
        animateButton(soundButton);
    });

    // üèÜ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    achievementsButton.addEventListener("click", function () {
        toggleButton(achievementsButton);
        animateButton(achievementsButton);
    });

    // üåç –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∞
    translationButton.addEventListener("click", function () {
        toggleButton(translationButton);
        animateButton(translationButton);
    });

    // üí° –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ê–π–∫–æ–≤–∏—á"
    leftButton.addEventListener("click", function () {
        toggleButton(leftButton);
    });

    // ‚Ñπ –û—Ç–∫—Ä—ã—Ç–∏–µ –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    infoButton.addEventListener("click", function () {
        infoModal.style.display = infoModal.style.display === "block" ? "none" : "block";
    });
    closeInfo.addEventListener("click", function () {
        infoModal.style.display = "none";
    });

    // ‚ùì –û—Ç–∫—Ä—ã—Ç–∏–µ –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (FAQ)
    extraInfoButton.addEventListener("click", function () {
        extraInfoModal.style.display = extraInfoModal.style.display === "block" ? "none" : "block";
    });
    closeExtraInfo.addEventListener("click", function () {
        extraInfoModal.style.display = "none";
    });

    // üîÑ –ó–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–æ–Ω –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∏—Ö –æ–±–ª–∞—Å—Ç–∏
    window.addEventListener("click", function (event) {
        if (event.target === infoModal) {
            infoModal.style.display = "none";
        }
        if (event.target === extraInfoModal) {
            extraInfoModal.style.display = "none";
        }
    });

    // üé∂ –ó–∞–ø—É—Å–∫ –º—É–∑—ã–∫–∏
    audio.muted = isMuted;
    audio.play().catch(error => console.warn("–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –∑–≤—É–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:", error));

    updateSoundButton(); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –∑–≤—É–∫–∞
});

// ‚úÖ **–ò–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞** üéÆ

// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
const menu = document.getElementById("menu");
const canvas = document.getElementById("gameCanvas");
const ctx = canvas.getContext("2d");

// üìå –§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ä—Ç–∞ –∏–≥—Ä—ã
function startGame() {
    console.log("–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞!");

    // ‚ùå –°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –∏ –Ω–∏–∂–Ω—é—é –ø–∞–Ω–µ–ª—å
    menu.style.display = "none";
    document.querySelector(".bottom-bar").style.display = "none";

    // ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∞–º—É –∏–≥—Ä—É
    canvas.style.display = "block";
    initGame();
}

// üìè –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ Canvas
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

// üéÆ –ò–≥—Ä–æ–∫ —Å –ø–ª–∞–≤–Ω—ã–º –¥–≤–∏–∂–µ–Ω–∏–µ–º
const player = {
    x: canvas.width / 2 - 25,
    y: canvas.height - 100,
    width: 50,
    height: 50,
    color: "#FFD700",
    velocityX: 0,
    velocityY: 0,
    accelerationX: 0,
    gravity: 0.4,
    jumpPower: -12,
    friction: 0.9, // –¢—Ä–µ–Ω–∏–µ (—á—Ç–æ–±—ã –Ω–µ —Å–∫–æ–ª—å–∑–∏–ª —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ)
    speed: 5 // –°–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è
};

// üèó –ú–∞—Å—Å–∏–≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º
const platforms = [];

// üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º (–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞)
function generatePlatform(yOffset = 100) {
    let lastPlatform = platforms[platforms.length - 1] || { x: canvas.width / 2, y: canvas.height };

    let newPlatform = {
        x: lastPlatform.x + (Math.random() * 240 - 120),
        y: lastPlatform.y - yOffset,
        width: 120,
        height: 20
    };

    // üìå –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º –ø–æ –±–æ–∫–∞–º —ç–∫—Ä–∞–Ω–∞
    if (newPlatform.x < 50) newPlatform.x = 50;
    if (newPlatform.x + newPlatform.width > canvas.width - 50) newPlatform.x = canvas.width - 50 - newPlatform.width;

    platforms.push(newPlatform);
}

// üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
for (let i = 0; i < 10; i++) {
    generatePlatform(100);
}

// üìå –°–æ–∑–¥–∞–µ–º **–≥–ª–∞–≤–Ω—É—é —Å—Ç–∞—Ä—Ç–æ–≤—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É** –ø–æ–¥ –∏–≥—Ä–æ–∫–æ–º
const startPlatform = {
    x: canvas.width / 2 - 60,
    y: canvas.height - 50,
    width: 120,
    height: 20,
};
platforms.push(startPlatform);

// üöÄ –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º, —á—Ç–æ –∏–≥—Ä–æ–∫ **—Å—Ç–æ–∏—Ç –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ** –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
player.y = startPlatform.y - player.height;

// üé® –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º
function drawPlatforms() {
    ctx.fillStyle = "#DAA520";
    platforms.forEach((p) => ctx.fillRect(p.x, p.y, p.width, p.height));
}

// üîÑ –õ–æ–≥–∏–∫–∞ –ø—Ä—ã–∂–∫–æ–≤ –∏ –¥–≤–∏–∂–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º
function update() {
    updatePhysics(); // ‚úÖ –î–æ–±–∞–≤–∏–ª–∏ —Ñ–∏–∑–∏–∫—É –¥–≤–∏–∂–µ–Ω–∏—è
    checkCollision(); // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏

    // üìå –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –≤—ã—à–µ —Å–µ—Ä–µ–¥–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞ ‚Äì **–¥–≤–∏–≥–∞–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –≤–Ω–∏–∑**
    if (player.y < canvas.height / 2 && player.velocityY < 0) {
        player.y = canvas.height / 2;
        platforms.forEach((p) => {
            p.y += Math.abs(player.velocityY) * 1.2;
        });
    }

    // üéØ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º **–≤–≤–µ—Ä—Ö—É**, –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –≤—ã—à–µ
    while (platforms[platforms.length - 1].y > 0) {
        generatePlatform(100);
    }

    // ‚ùå –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º, –∫–æ—Ç–æ—Ä—ã–µ **—É—à–ª–∏ –∑–∞ —ç–∫—Ä–∞–Ω**
    while (platforms[0].y > canvas.height) {
        platforms.shift();
    }

    draw();
    requestAnimationFrame(update);
}

// ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∏–∑–∏–∫–∏ –¥–≤–∏–∂–µ–Ω–∏—è
function updatePhysics() {
    player.velocityY += player.gravity;
    player.y += player.velocityY;

    // üéØ –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—Ä–µ–Ω–∏–µ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
    player.velocityX *= player.friction;
    player.x += player.velocityX;

    // üîÑ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –∫—Ä–∞—è–º —ç–∫—Ä–∞–Ω–∞
    if (player.x < 0) player.x = 0;
    if (player.x + player.width > canvas.width) player.x = canvas.width - player.width;
}

// ‚úÖ –í—ã–∑–æ–≤ `checkCollision()` (–ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å—Ç–æ–∏—Ç –ª–∏ –∏–≥—Ä–æ–∫ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ)
function checkCollision() {
    for (let p of platforms) {
        if (
            player.y + player.height >= p.y &&
            player.y + player.height <= p.y + p.height &&
            player.x + player.width > p.x &&
            player.x < p.x + p.width &&
            player.velocityY > 0
        ) {
            player.y = p.y - player.height;
            player.velocityY = player.jumpPower * 1.1; // –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à–µ –º–æ—â–Ω–æ—Å—Ç–∏ –ø—Ä—ã–∂–∫–∞
        }
    }
}

// üé® –§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –æ–±—ä–µ–∫—Ç–æ–≤
function draw() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    drawPlatforms(); // –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã

    // üéÆ –†–∏—Å—É–µ–º –∏–≥—Ä–æ–∫–∞
    ctx.fillStyle = player.color;
    ctx.fillRect(player.x, player.y, player.width, player.height);
}

// üéØ –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è Play
function initGame() {
    update();
}

// üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–ª–∞–≤–∏—à
document.addEventListener("keydown", (event) => {
    if (event.code === "ArrowLeft") {
        player.velocityX = -player.speed; // –¢–µ–ø–µ—Ä—å —Å–∫–æ—Ä–æ—Å—Ç—å –≤—ã—à–µ
    }
    if (event.code === "ArrowRight") {
        player.velocityX = player.speed; // –¢–µ–ø–µ—Ä—å —Å–∫–æ—Ä–æ—Å—Ç—å –≤—ã—à–µ
    }
});

// üéØ –£–ª—É—á—à–µ–Ω–Ω–∞—è –∏–Ω–µ—Ä—Ü–∏—è (—á—Ç–æ–±—ã –∏–≥—Ä–æ–∫ –Ω–µ —Ç–æ—Ä–º–æ–∑–∏–ª –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ)
document.addEventListener("keyup", (event) => {
    if (event.code === "ArrowLeft" || event.code === "ArrowRight") {
        player.velocityX *= 0.5; // –ü–ª–∞–≤–Ω–æ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ
    }
});













